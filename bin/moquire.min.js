var moquire=function(){function m(a){return{}.toString.call(a).match(/\s([a-zA-Z]+)/)[1].toLowerCase()}function n(a,b){if(a.length!=b.length)return!1;var d=Array.prototype.map.call(a,m);return b.every(function(a,b){return a==d[b]})}function p(a,b){var d=!1,g;for(g in a){var h=a[g];if("function"===typeof h){var e="module"+s++;define(e,[],h);a[g]=e}else"object"===typeof h&&(d=!0,a[g]=p(h,!0))}!1===d&&!0!==b&&(a={"*":a});return a}function q(a,b,d){c++;a(b,function(){d.apply(this,arguments);k++;k==c&&
"function"==typeof f&&f()})}function l(a,b,d){if(n(arguments,["array","function"]))q(require,a,b);else if(n(arguments,["object","array","function"])){var g=b,h=d,e=r,c="context"+t++,k=p(a),c={context:c,map:k},f;for(f in e)c[f]=e[f];e=require.config(c);q(e,g,h)}else throw Error("could not moquire\nInvalid argument types ("+Array.prototype.map.call(arguments,m).join(", ")+")\nexpected (array, function) or (object, array, function)");}var f=function(){},c=0,k=0,r={},t=0,s=0;l.config=function(a){return r=
a};l.then=function(a){0!=c&&c==k?a():f=a};return l}();
